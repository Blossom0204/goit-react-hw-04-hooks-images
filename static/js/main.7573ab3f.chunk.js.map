{"version":3,"sources":["components/Loader/Loader.styles.jsx","components/Loader/Loader.jsx","components/Searchbar/Searchbar.styles.jsx","components/Searchbar/Searchbar.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.styles.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styles.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styles.jsx","components/Button/Button.jsx","components/Modal/Modal.styles.jsx","components/Modal/Modal.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["LoaderContainer","styled","button","Loader","type","color","height","width","timeout","Searchbar","header","SearchForm","form","SearchFormButton","SearchFormButtonLabel","span","SearchFormInput","input","Searchedbar","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","toast","position","autoClose","autocomplete","autoFocus","onChange","target","value","placeholder","axios","defaults","baseURL","Api","fetchImages","page","get","then","response","data","hits","console","log","ImageGalleryItem","li","ImageGalleryItemImage","img","ImageGalleryItemList","alt","webformatURL","largeImageURL","loadLargeImageURL","src","onClick","ImageGallery","ul","ImageGalleryList","images","onSelect","map","id","tags","LoadMoreBtn","Button","Overlay","div","Modal","modalRoot","document","querySelector","ModalWindow","onClose","useEffect","window","addEventListener","handleKeydown","removeEventListener","code","createPortal","currentTarget","App","error","setError","setImages","isLoading","setIsLoading","selectedImage","setSelectedImage","setPage","showModal","setShowModal","responseImages","prevImages","catch","message","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","length","prevPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qRACaA,EAAkBC,IAAOC,OAAV,yI,OCiBbC,I,UAAAA,EAdf,WACE,OACE,cAACH,EAAD,UACE,cAAC,IAAD,CACEI,KAAK,SACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,S,QCXJC,EAAYR,IAAOS,OAAV,qcAkBTC,EAAaV,IAAOW,KAAV,kLASVC,EAAmBZ,IAAOC,OAAV,qaAiBhBY,EAAwBb,IAAOc,KAAV,iNAWrBC,EAAkBf,IAAOgB,MAAV,+P,MC5Cb,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAmBA,OACE,cAACb,EAAD,UACE,eAACE,EAAD,CAAYQ,SAnBK,SAACI,GACpBA,EAAEC,iBAEyB,KAAvBH,EAAYI,QAOhBN,EAASE,GACTC,EAAe,KAPbI,YAAM,6CAAoC,CACxCC,SAAU,YACVC,UAAW,OAab,UACE,cAACf,EAAD,CAAkBT,KAAK,SAAvB,SACE,cAACU,EAAD,uBAEF,cAACE,EAAD,CACEa,aAAa,MACbC,WAAS,EACTC,SAZa,SAACR,GACpBD,EAAeC,EAAES,OAAOC,QAYlBC,YAAY,2BACZ9B,KAAK,OACL6B,MAAOZ,S,qBC1CjBc,IAAMC,SAASC,QAAU,2BAezB,I,MAGeC,EAHH,CACVC,YAbF,YAA6C,IAAtBlB,EAAqB,EAArBA,YAAamB,EAAQ,EAARA,KAClC,IACE,OAAOL,IACJM,IADI,aAEGpB,EAFH,iBAEuBmB,EAFvB,gBAJK,qCAIL,yDAIJE,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,QACpC,SACAC,QAAQC,IAAI,YCZHC,EAAmB/C,IAAOgD,GAAV,sLAKhBC,EAAwBjD,IAAOkD,IAAV,sNCCnB,SAASC,EAAT,GAKX,IAAD,IAJDC,WAIC,MAJK,GAIL,EAHDC,EAGC,EAHDA,aACAC,EAEC,EAFDA,cACAC,EACC,EADDA,kBAEA,OACE,cAACR,EAAD,UACE,cAACE,EAAD,CACEG,IAAKA,EACLI,IAAKH,EACLI,QAAS,kBAAMF,EAAkBD,QCjBlC,I,EAAMI,EAAe1D,IAAO2D,GAAV,4RCIV,SAASC,EAAT,GAAiD,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACjD,OACE,cAACJ,EAAD,UACGG,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,aAAcY,EAArB,EAAqBA,KAAMX,EAA3B,EAA2BA,cAA3B,OACV,cAACH,EAAD,CAEEE,aAAcA,EACdC,cAAeA,EACfF,IAAKa,EACLV,kBAAmBO,GAJdE,QCTR,I,IAAME,EAAclE,IAAOC,OAAV,qnBCGT,SAASkE,EAAT,GAA8B,IAAZV,EAAW,EAAXA,QAC/B,OACE,cAACS,EAAD,CAAa/D,KAAK,SAASsD,QAASA,EAApC,uBCLG,IAAMW,EAAUpE,IAAOqE,IAAV,2OAYPC,EAAQtE,IAAOqE,IAAV,iGCRZE,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,QAASrB,EAAiB,EAAjBA,cAC7CsB,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,OAI1C,IAAMA,EAAgB,SAACzD,GACN,WAAXA,EAAE2D,MACJN,KAUJ,OAAOO,uBACL,cAACd,EAAD,CAASX,QAPiB,SAACnC,GACvBA,EAAE6D,gBAAkB7D,EAAES,QACxB4C,KAKF,SACE,cAACL,EAAD,UACE,qBAAKd,IAAKF,EAAeF,IAAI,SAGjCmB,GCtBW,SAASa,IACtB,MAA0BjE,mBAAS,MAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAA4BnE,mBAAS,IAArC,mBAAO0C,EAAP,KAAe0B,EAAf,KACA,EAAkCpE,oBAAS,GAA3C,mBAAOqE,EAAP,KAAkBC,EAAlB,KACA,EAA0CtE,mBAAS,IAAnD,mBAAOuE,EAAP,KAAsBC,EAAtB,KACA,EAAwBxE,mBAAS,GAAjC,mBAAOoB,EAAP,KAAaqD,EAAb,KACA,EAAsCzE,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,oBAAS,GAA3C,mBAAO0E,EAAP,KAAkBC,EAAlB,KAEAlB,qBAAU,WACY,KAAhBxD,IAEJqE,GAAa,GAEbpD,EAAIC,YAAY,CAAElB,cAAamB,SAC5BE,MAAK,SAACsD,GACLR,GAAU,SAACS,GAAD,4BAAoBA,GAApB,YAAmCD,UAE9CE,OAAM,SAACZ,GAAD,OAAWC,EAASD,EAAMa,YAChCC,SAAQ,kBAAMV,GAAa,SAC7B,CAACrE,EAAamB,IAEjBqC,qBAAU,WACRC,OAAOuB,SAAS,CACdC,IAAK7B,SAAS8B,gBAAgBC,aAC9BC,SAAU,cAId,IAYMC,EAAc,WAClBX,GAAcD,IAOhB,OACE,qCACGR,GAAS5D,IAAM4D,MAAM,mBACtB,cAACpE,EAAD,CAAaC,SAlBI,SAACc,GACpBsD,EAAS,MACTC,EAAU,IACVK,EAAQ,GACRvE,EAAeW,MAeZwD,GAAa,cAAC,EAAD,IACd,cAAC5B,EAAD,CAAkBC,OAAQA,EAAQC,SAzBZ,SAACR,GACzBqC,EAAiBrC,GACjBmD,OAwBG5C,EAAO6C,OAAS,IAAM,cAACvC,EAAD,CAAQV,QAVhB,WACjBmC,GAAQ,SAACe,GAAD,OAAcA,EAAW,QAU9Bd,GACC,cAACnB,EAAD,CAAaC,QAAS8B,EAAanD,cAAeoC,IAEnD,cAAC,IAAD,CAAgBhE,SAAS,YAAYC,UAAW,SCtEvD,IAYeiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrE,MAAK,YAAkD,IAA/CsE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFZ,SAAS+C,eAAe,SAM1BX,M","file":"static/js/main.7573ab3f.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\nexport const LoaderContainer = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`\r\n","import React from 'react'\r\nimport Spinner from 'react-loader-spinner'\r\nimport { LoaderContainer } from './Loader.styles'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <LoaderContainer>\r\n      <Spinner\r\n        type=\"Hearts\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    </LoaderContainer>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import styled from '@emotion/styled'\r\nexport const Searchbar = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`\r\nexport const SearchFormButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport { toast } from 'react-hot-toast'\r\nimport {\r\n  Searchbar,\r\n  SearchForm,\r\n  SearchFormButton,\r\n  SearchFormButtonLabel,\r\n  SearchFormInput,\r\n} from './Searchbar.styles'\r\nimport PropTypes from 'prop-types'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nexport default function Searchedbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (searchQuery.trim() === '') {\r\n      toast('⚠️Please enter search query name', {\r\n        position: 'top-right',\r\n        autoClose: 3000,\r\n      })\r\n      return\r\n    }\r\n    onSubmit(searchQuery)\r\n    setSearchQuery('')\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setSearchQuery(e.target.value)\r\n  }\r\n  return (\r\n    <Searchbar>\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <SearchFormButton type=\"submit\">\r\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n        </SearchFormButton>\r\n        <SearchFormInput\r\n          autocomplete=\"off\"\r\n          autoFocus\r\n          onChange={handleChange}\r\n          placeholder=\"Search images and photos\"\r\n          type=\"text\"\r\n          value={searchQuery}\r\n        />\r\n      </SearchForm>\r\n    </Searchbar>\r\n  )\r\n}\r\n\r\nSearchedbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/'\r\nconst API_KEY = '21743820-34e3da196a7425b34b0857350'\r\n\r\nfunction fetchImages({ searchQuery, page }) {\r\n  try {\r\n    return axios\r\n      .get(\r\n        `?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      )\r\n      .then((response) => response.data.hits)\r\n  } catch {\r\n    console.log('error')\r\n  }\r\n}\r\n\r\nconst Api = {\r\n  fetchImages,\r\n}\r\nexport default Api\r\n","import styled from '@emotion/styled'\r\nexport const ImageGalleryItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\nexport const ImageGalleryItemImage = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport {\r\n  ImageGalleryItem,\r\n  ImageGalleryItemImage,\r\n} from './ImageGalleryItem.styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function ImageGalleryItemList({\r\n  alt = '',\r\n  webformatURL,\r\n  largeImageURL,\r\n  loadLargeImageURL,\r\n}) {\r\n  return (\r\n    <ImageGalleryItem>\r\n      <ImageGalleryItemImage\r\n        alt={alt}\r\n        src={webformatURL}\r\n        onClick={() => loadLargeImageURL(largeImageURL)}\r\n      />\r\n    </ImageGalleryItem>\r\n  )\r\n}\r\n\r\nImageGalleryItemList.propTypes = {\r\n  alt: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  loadLargeImageURL: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\nexport const ImageGallery = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n","import React from 'react'\r\nimport ImageGalleryItemList from '../ImageGalleryItem/ImageGalleryItem'\r\nimport { ImageGallery } from './ImageGallery.styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function ImageGalleryList({ images, onSelect }) {\r\n  return (\r\n    <ImageGallery>\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItemList\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          alt={tags}\r\n          loadLargeImageURL={onSelect}\r\n        />\r\n      ))}\r\n    </ImageGallery>\r\n  )\r\n}\r\n\r\nImageGalleryList.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\nexport const LoadMoreBtn = styled.button`\r\n  padding: 8px 16px;\r\n  margin: 0px auto;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { LoadMoreBtn } from './Button.styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <LoadMoreBtn type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </LoadMoreBtn>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`\r\nexport const Modal = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`\r\n","import React, { useEffect } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport { Overlay, Modal } from './Modal.styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nexport default function ModalWindow({ onClose, largeImageURL }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeydown)\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeydown)\r\n    }\r\n  })\r\n\r\n  const handleKeydown = (e) => {\r\n    if (e.code === 'Escape') {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <Overlay onClick={handleBackdropClick}>\r\n      <Modal>\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </Modal>\r\n    </Overlay>,\r\n    modalRoot,\r\n  )\r\n}\r\n\r\nModalWindow.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { ToastContainer, toast } from 'react-toastify'\nimport Loader from './components/Loader/Loader'\nimport Searchedbar from './components/Searchbar/Searchbar'\nimport Api from './services/api'\nimport ImageGalleryList from './components/ImageGallery/ImageGallery'\nimport Button from './components/Button/Button'\nimport ModalWindow from './components/Modal/Modal'\nimport PropTypes from 'prop-types'\nimport 'react-toastify/dist/ReactToastify.css'\n\nexport default function App() {\n  const [error, setError] = useState(null)\n  const [images, setImages] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [selectedImage, setSelectedImage] = useState('')\n  const [page, setPage] = useState(1)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [showModal, setShowModal] = useState(false)\n\n  useEffect(() => {\n    if (searchQuery === '') return\n\n    setIsLoading(true)\n\n    Api.fetchImages({ searchQuery, page })\n      .then((responseImages) => {\n        setImages((prevImages) => [...prevImages, ...responseImages])\n      })\n      .catch((error) => setError(error.message))\n      .finally(() => setIsLoading(false))\n  }, [searchQuery, page])\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    })\n  })\n\n  const loadLargeImageURL = (largeImageURL) => {\n    setSelectedImage(largeImageURL)\n    toggleModal()\n  }\n\n  const handleSubmit = (value) => {\n    setError(null)\n    setImages([])\n    setPage(1)\n    setSearchQuery(value)\n  }\n\n  const toggleModal = () => {\n    setShowModal(!showModal)\n  }\n\n  const onLoadMore = () => {\n    setPage((prevPage) => prevPage + 1)\n  }\n\n  return (\n    <>\n      {error && toast.error('No image found!')}\n      <Searchedbar onSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      <ImageGalleryList images={images} onSelect={loadLargeImageURL} />\n      {images.length > 11 && <Button onClick={onLoadMore} />}\n      {showModal && (\n        <ModalWindow onClose={toggleModal} largeImageURL={selectedImage} />\n      )}\n      {<ToastContainer position=\"top-right\" autoClose={3000} />}\n    </>\n  )\n}\n\nApp.propTypes = {\n  images: PropTypes.array,\n  isLoading: PropTypes.bool,\n  selectedImage: PropTypes.string,\n  page: PropTypes.number,\n  searchQuery: PropTypes.string,\n  showModal: PropTypes.bool,\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}